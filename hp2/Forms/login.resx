<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        stn+C+2GUVswIRhLAAAAAElFTkSuQmCC
</value>
  </data>
</root>